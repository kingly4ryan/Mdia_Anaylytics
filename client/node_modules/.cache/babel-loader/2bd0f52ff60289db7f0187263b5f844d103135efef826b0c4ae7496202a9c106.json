{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\project\\\\client\\\\src\\\\components\\\\Churn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchChurnResults } from '../utils/api';\nimport { BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Churn = () => {\n  _s();\n  const [data, setData] = useState({\n    actual: [],\n    predicted: []\n  });\n  const [showChart, setShowChart] = useState(false);\n  useEffect(() => {\n    fetchChurnResults().then(setData);\n  }, []);\n  const chartData = data.actual.map((value, index) => ({\n    name: index + 1,\n    Actual: value,\n    Predicted: data.predicted[index]\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Spotify Churn Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowChart(!showChart),\n      children: showChart ? 'Hide Chart' : 'Show Chart'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), showChart && /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 600,\n      height: 300,\n      data: chartData,\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"Actual\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"Predicted\",\n        fill: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#ccc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Churn, \"TFaWgl5hZTHLQRKCfvJlIMk033E=\");\n_c = Churn;\nexport default Churn;\nvar _c;\n$RefreshReg$(_c, \"Churn\");","map":{"version":3,"names":["React","useEffect","useState","fetchChurnResults","BarChart","Bar","CartesianGrid","XAxis","YAxis","Tooltip","Legend","jsxDEV","_jsxDEV","Churn","_s","data","setData","actual","predicted","showChart","setShowChart","then","chartData","map","value","index","name","Actual","Predicted","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","width","height","dataKey","fill","stroke","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/project/client/src/components/Churn.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchChurnResults } from '../utils/api';\r\nimport { BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\n\r\nconst Churn = () => {\r\n  const [data, setData] = useState({ actual: [], predicted: [] });\r\n  const [showChart, setShowChart] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchChurnResults().then(setData);\r\n  }, []);\r\n\r\n  const chartData = data.actual.map((value, index) => ({\r\n    name: index + 1,\r\n    Actual: value,\r\n    Predicted: data.predicted[index],\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <h2>Spotify Churn Prediction</h2>\r\n      <button onClick={() => setShowChart(!showChart)}>\r\n        {showChart ? 'Hide Chart' : 'Show Chart'}\r\n      </button>\r\n      {showChart && (\r\n        <BarChart width={600} height={300} data={chartData}>\r\n          <Bar dataKey=\"Actual\" fill=\"#8884d8\" />\r\n          <Bar dataKey=\"Predicted\" fill=\"#82ca9d\" />\r\n          <CartesianGrid stroke=\"#ccc\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n        </BarChart>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Churn;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,cAAc;AAChD,SAASC,QAAQ,EAAEC,GAAG,EAAEC,aAAa,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvF,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC;IAAEe,MAAM,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAG,CAAC,CAAC;EAC/D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACdE,iBAAiB,CAAC,CAAC,CAACkB,IAAI,CAACL,OAAO,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,SAAS,GAAGP,IAAI,CAACE,MAAM,CAACM,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,MAAM;IACnDC,IAAI,EAAED,KAAK,GAAG,CAAC;IACfE,MAAM,EAAEH,KAAK;IACbI,SAAS,EAAEb,IAAI,CAACG,SAAS,CAACO,KAAK;EACjC,CAAC,CAAC,CAAC;EAEH,oBACEb,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCrB,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAMd,YAAY,CAAC,CAACD,SAAS,CAAE;MAAAU,QAAA,EAC7CV,SAAS,GAAG,YAAY,GAAG;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACRd,SAAS,iBACRP,OAAA,CAACR,QAAQ;MAAC+B,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAACrB,IAAI,EAAEO,SAAU;MAAAO,QAAA,gBACjDjB,OAAA,CAACP,GAAG;QAACgC,OAAO,EAAC,QAAQ;QAACC,IAAI,EAAC;MAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCrB,OAAA,CAACP,GAAG;QAACgC,OAAO,EAAC,WAAW;QAACC,IAAI,EAAC;MAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1CrB,OAAA,CAACN,aAAa;QAACiC,MAAM,EAAC;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/BrB,OAAA,CAACL,KAAK;QAAC8B,OAAO,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxBrB,OAAA,CAACJ,KAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTrB,OAAA,CAACH,OAAO;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXrB,OAAA,CAACF,MAAM;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CAjCID,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAmCX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}