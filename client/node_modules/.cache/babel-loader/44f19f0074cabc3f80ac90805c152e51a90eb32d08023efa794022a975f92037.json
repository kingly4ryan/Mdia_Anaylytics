{"ast":null,"code":"var _jsxFileName = \"/Users/dharshanm/Desktop/project /client/src/components/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { LineChart, Line, BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport twitterResponse from '/Users/dharshanm/Desktop/project /client/src/performance_predictions.json';\nimport instagramResponse from '/Users/dharshanm/Desktop/project /client/src/segmentation_results.json';\nimport spotifyResponse from '/Users/dharshanm/Desktop/project /client/src/churn_predictions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(twitterResponse);\nconsole.log(instagramResponse);\nconsole.log(spotifyResponse);\nconst Dashboard = () => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    // Transform the data to match the chart format\n    const transformedData = spotifyResponse.actual.map((value, index) => ({\n      name: index,\n      actual: value,\n      predicted: spotifyResponse.predicted[index]\n    }));\n    setChartData(transformedData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Social Media Analytics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Twitter Performance Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Twitter Metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Instagram User Segmentation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Instagram Metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Spotify Churn Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), \"return (\", /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"actual\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"predicted\",\n          stroke: \"#82ca9d\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          stroke: \"#ccc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), \"); };\", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Spotify Metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Leo9Xk/Ki5G6SkYc3yZESo07mWw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","Line","BarChart","Bar","PieChart","Pie","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","twitterResponse","instagramResponse","spotifyResponse","jsxDEV","_jsxDEV","console","log","Dashboard","_s","chartData","setChartData","transformedData","actual","map","value","index","name","predicted","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","type","dataKey","stroke","_c","$RefreshReg$"],"sources":["/Users/dharshanm/Desktop/project /client/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { LineChart, Line, BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport twitterResponse from '/Users/dharshanm/Desktop/project /client/src/performance_predictions.json'\nimport instagramResponse from '/Users/dharshanm/Desktop/project /client/src/segmentation_results.json'\nimport spotifyResponse from '/Users/dharshanm/Desktop/project /client/src/churn_predictions.json'\n\n\n\nconsole.log(twitterResponse)\nconsole.log(instagramResponse)\nconsole.log(spotifyResponse)\n\nconst Dashboard = () => \n    {\n        const [chartData, setChartData] = useState([]);\n\n    useEffect(() => {\n        // Transform the data to match the chart format\n        const transformedData = spotifyResponse.actual.map((value, index) => ({\n            name: index,\n            actual: value,\n            predicted: spotifyResponse.predicted[index],\n        }));\n        setChartData(transformedData);\n    }, []);\n  \n\n  return (\n    <div>\n      <h1>Social Media Analytics Dashboard</h1>\n\n      {/* Twitter Performance Prediction */}\n      <h2>Twitter Performance Prediction</h2>\n      <ResponsiveContainer width=\"100%\" height={300}>\n           \n      </ResponsiveContainer>\n\n      {/* Twitter Metrics */}\n      <h2>Twitter Metrics</h2>\n      <ResponsiveContainer width=\"100%\" height={300}>\n       \n      </ResponsiveContainer>\n\n      {/* Instagram User Segmentation */}\n      <h2>Instagram User Segmentation</h2>\n      <ResponsiveContainer width=\"100%\" height={300}>\n       \n      </ResponsiveContainer>\n\n      {/* Instagram Metrics */}\n      <h2>Instagram Metrics</h2>\n      <ResponsiveContainer width=\"100%\" height={300}>\n       \n      </ResponsiveContainer>\n\n      {/* Spotify Churn Prediction */}\n      <h2>Spotify Churn Prediction</h2>\n      return (\n        <ResponsiveContainer width=\"100%\" height={400}>\n            <LineChart data={chartData}>\n                <Line type=\"monotone\" dataKey=\"actual\" stroke=\"#8884d8\" />\n                <Line type=\"monotone\" dataKey=\"predicted\" stroke=\"#82ca9d\" />\n                <CartesianGrid stroke=\"#ccc\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n            </LineChart>\n        </ResponsiveContainer>\n    );\n};\n    \n\n      {/* Spotify Metrics */}\n      <h2>Spotify Metrics</h2>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        \n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}