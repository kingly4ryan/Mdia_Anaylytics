{"ast":null,"code":"import axios from 'axios';\n\n// utils/api.js\nexport const fetchPerformanceResults = async () => {\n  // Mocking the data as if it's coming from an API\n  return {\n    actual: [1900, 2800, 2200, 1500, 1600, 1800, 2600, 1700, 2100, 2200],\n    predicted: [1900.0000000000002, 2800.0, 2200.0, 1500.0000000000005, 1600.0000000000005, 1800.0000000000002, 2600.0, 1700.0000000000005, 2100.0, 2200.0]\n  };\n};\nexport const fetchChurnResults = async () => {\n  try {\n    const response = await axios.get('/spotify-predictions'); // Adjust URL to your Flask API endpoint\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching churn results:', error);\n    return {\n      actual: [],\n      predicted: []\n    }; // Return empty data or handle error as needed\n  }\n};","map":{"version":3,"names":["axios","fetchPerformanceResults","actual","predicted","fetchChurnResults","response","get","data","error","console"],"sources":["C:/Users/ASUS/Desktop/project/client/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\n  \r\n  // utils/api.js\r\nexport const fetchPerformanceResults = async () => {\r\n  // Mocking the data as if it's coming from an API\r\n  return {\r\n    actual: [\r\n        1900,\r\n        2800,\r\n        2200,\r\n        1500,\r\n        1600,\r\n        1800,\r\n        2600,\r\n        1700,\r\n        2100,\r\n        2200\r\n    ],\r\n    predicted: [\r\n        1900.0000000000002,\r\n        2800.0,\r\n        2200.0,\r\n        1500.0000000000005,\r\n        1600.0000000000005,\r\n        1800.0000000000002,\r\n        2600.0,\r\n        1700.0000000000005,\r\n        2100.0,\r\n        2200.0\r\n    ]\r\n  };\r\n};\r\n\r\n\r\nexport const fetchChurnResults = async () => {\r\n  try {\r\n    const response = await axios.get('/spotify-predictions'); // Adjust URL to your Flask API endpoint\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching churn results:', error);\r\n    return { actual: [], predicted: [] }; // Return empty data or handle error as needed\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAIvB;AACF,OAAO,MAAMC,uBAAuB,GAAG,MAAAA,CAAA,KAAY;EACjD;EACA,OAAO;IACLC,MAAM,EAAE,CACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,CACP;IACDC,SAAS,EAAE,CACP,kBAAkB,EAClB,MAAM,EACN,MAAM,EACN,kBAAkB,EAClB,kBAAkB,EAClB,kBAAkB,EAClB,MAAM,EACN,kBAAkB,EAClB,MAAM,EACN,MAAM;EAEZ,CAAC;AACH,CAAC;AAGD,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC;IAC1D,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO;MAAEN,MAAM,EAAE,EAAE;MAAEC,SAAS,EAAE;IAAG,CAAC,CAAC,CAAC;EACxC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}