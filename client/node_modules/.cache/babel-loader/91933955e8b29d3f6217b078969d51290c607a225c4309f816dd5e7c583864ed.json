{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\project\\\\client\\\\src\\\\utils\\\\api.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchPerformanceResults } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Performance = () => {\n  _s();\n  const [data, setData] = useState({\n    actual: [],\n    predicted: []\n  });\n  useEffect(() => {\n    fetchPerformanceResults().then(setData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Twitter Performance Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Predicted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.actual.map((value, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.predicted[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Performance, \"xr6eIK6PxQrZe0tBJnu4sVYYuGo=\");\n_c = Performance;\nexport default Performance;\nvar _c;\n$RefreshReg$(_c, \"Performance\");","map":{"version":3,"names":["React","useEffect","useState","fetchPerformanceResults","jsxDEV","_jsxDEV","Performance","_s","data","setData","actual","predicted","then","children","fileName","_jsxFileName","lineNumber","columnNumber","map","value","index","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/project/client/src/utils/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchPerformanceResults } from '../utils/api';\r\n\r\nconst Performance = () => {\r\n  const [data, setData] = useState({ actual: [], predicted: [] });\r\n\r\n  useEffect(() => {\r\n    fetchPerformanceResults().then(setData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Twitter Performance Prediction</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Actual</th>\r\n            <th>Predicted</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.actual.map((value, index) => (\r\n            <tr key={index}>\r\n              <td>{value}</td>\r\n              <td>{data.predicted[index]}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Performance;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,uBAAuB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,MAAM,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAG,CAAC,CAAC;EAE/DV,SAAS,CAAC,MAAM;IACdE,uBAAuB,CAAC,CAAC,CAACS,IAAI,CAACH,OAAO,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCZ,OAAA;MAAAQ,QAAA,gBACER,OAAA;QAAAQ,QAAA,eACER,OAAA;UAAAQ,QAAA,gBACER,OAAA;YAAAQ,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACfZ,OAAA;YAAAQ,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRZ,OAAA;QAAAQ,QAAA,EACGL,IAAI,CAACE,MAAM,CAACQ,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC5Bf,OAAA;UAAAQ,QAAA,gBACER,OAAA;YAAAQ,QAAA,EAAKM;UAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChBZ,OAAA;YAAAQ,QAAA,EAAKL,IAAI,CAACG,SAAS,CAACS,KAAK;UAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAFzBG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACV,EAAA,CA5BID,WAAW;AAAAe,EAAA,GAAXf,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}